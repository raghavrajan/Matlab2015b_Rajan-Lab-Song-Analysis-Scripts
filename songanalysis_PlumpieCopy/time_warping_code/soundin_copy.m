function [rawsong, Fs]=soundin(pathname, soundfile, filetype)

%reads data from soundfile into matlab vector
%filetype is:
%'b' for binary big endian from mac
%'w' for 16bit wavefile (i.e. from cbs)
%'d' for dcp
%'f' for foosong
%'filt' for .filt files generated by uisonganal
%'obs[n]' for observer/labview files.  
%         [n] is string specifying channel number from start (0, 1 ,2 etc...)
%         or form end (0r, 1r, 2r, etc...)
%         by programming convention observer 'cbin' and 'bbin' files ahve song data as last channel ('0r')
%         so that 'obs0r'  as filtype should return song data; corresponding '.rec' files are needed for this 
%			 filetype in order for sample rate to be specified
%         See get_daqdata for more info...
%If sample rate is available returned,
%otherwise Fs = -1 is returned



if strcmp(filetype,'b')   %binary filetype, big-endian (from mac or sun)
  sound_fid=fopen([pathname, soundfile],'r','b');  
  if sound_fid == -1
    disp(['soundin: cannot open soundfile ' soundfile])
    fclose(sound_fid);
    return;
  end
  rawsong=fread(sound_fid,inf,'short');
  Fs=-1;   %this filetype doesn't contain Fs
elseif strcmp(filetype,'w')    %wavefile
  [rawsong, Fs] = wavread16([pathname, soundfile]);
elseif strcmp(filetype,'d')    %dcp file
  [Fs, nframes, rawsong] = read_song([pathname, soundfile]);
elseif strcmp(filetype,'f')    %foosong/gogo file
  [rawsong, Fs] = read_rawfile42c([pathname, soundfile],'short');
elseif strcmp(filetype,'filt')
   [rawsong, Fs] = read_filt([pathname, soundfile]);
elseif  strcmp(filetype(1:3),'obs')
   if length(filetype)==3
      chan_spec='0r';  %default is to return the last channel of observer file   
      disp(['no channel specified in filetype; default observer filetype = obs0r (see soundin)'])
   else chan_spec=filetype(4:length(filetype))   
   end   
   [rawsong, Fs]= get_daqdata_copy([pathname, soundfile],chan_spec);
else                      %unknown filetype
  disp('soundin: cannot open this file type')  
end


